#+TITLE: Class2 

*  处理器及其部件
  
** cpu 标志寄存器flag，程序计数器PC，算数逻辑单元，控制单元：指令暂存器IR，指令译码器ID， 内存地址寄存器MAR，内存数据寄存器MDR ， io交互，地址寄存器，数据寄存器，cache

* 用户程序可见寄存器
  减少访问主存次数，加快速度
  数据寄存器
  地址寄存器

* 理解控制与状态寄存器
  被具有特权的操作系统程序使用
  PC
  iR
  CC条件码
  标志位
  
* 掌握程序状态字的概念
  PSW，既是操作系统概念，记录当前程序运行动态信息
  通常包含：程序计数器，指令寄存器，条件码，中断字
  PSW也是计算机系统的寄存器
  通常设置一组控制与状态寄存器
  也可以专设一个PSW寄存器
  
* 机器指令及其执行过程
  计算机系统执行的基本单位，也是cpu执行的基本单位
  指令由一个或多个字节组成，包括操作码字段，一个或多个操作数地址字段，以及一些表征机器状态的状态字以及特征码
  完成算数逻辑运算，数据传输，控制流跳转征码
  指令执行过程： cpu根据pc取出指令，放入IR并对指令译码然后发出各种控制命令，执行微操作
** 指令执行周期 
   - 取码
   - 解码
   - 执行

* 指令流水线
  cpu同时进行执行周期
  
* 特权指令与非特权指令
  用户不能使用全部指令，与核心资源相关的特殊指令将被保护

* 处理器模式及其切换
  设置处理器模式实现特权指令管理
** 四种运行模式
   0. 操作系统内核
   1. 系统调用
   2. 共享库程序
   3. 用户程序
   通常只使用0，3
   模式切换 内核模式<-->用户模式，通过中断

* 中断的基本概念
  停止当前程序，处理紧急任务，结束后解决其他任务
  操作系统是中断驱动的，中断是激活操作系统的唯一方式
  上述都是广义上的中断

* 中断，异常，系统异常
  狭义的中断，来源于处理器之外的中断事件
  异常指指令运行时引发的中断
  系统异常是执行陷入指令而触发系统调用引起的中断事件，即用户模式向内核模式切换
  
* 中断源
** 处理器硬件故障中断事件
   处理原则：保护现场，停止设备，停止cpu，向操作员报告，等待人工干预
** 程序型中断事件
   算数异常，指令异常，虚拟地址异常
** 自愿性中断事件，系统调用
** IO中断事件
** 外部中断事件

* 中断系统
  响应中断由硬件子系统完成
  处理中断由软件子系统完成

* 中断管理
  在周期后增加一个检查中断的周期

* 中断响应与中断装置
  中断装置发现响应中断异常的硬件装置称为中断装置
** 中断控制器
   cpu的一个控制部件包括中断控制逻辑线路和中断寄存器
** 陷阱与系统陷阱
   指令的逻辑实现线路的一部分
** 中断响应过程
   发现中断源，提出中断请求
   中断当前程序的执行
   转向操作系统的中断处理程序

* 中断处理程序
  处理中断事件的控制程序，主要任务是处理中断事件和恢复正常操作
  保护未被硬件保护的处理器状态
  通过分析被中断进程的PSW中断码字段识别中断源
  分别处理发生的中断事件
  恢复正常操作

* 中断屏蔽
  中断装置通过中断屏蔽位决定是否响应以发生的中断

* 中断优先级
  有优先度的响应中断

* 中断的嵌套处理
  响应中断过程中再响应其他中断

* 多中断的响应与处理
  中断处理次序

* 进程基本概念
  操作系统为正在运行程序建立的管理实体
  进程是一个具有独立功能的程序关于某个数据集合的一次运行活动
  进程是操作系统进行资源调度的独立段位
** 进程的五个实体部分
   1. （OS管理运行程序的）数据结构P
   2. （运行程序的）内存代码C
   3. （运行程序的）内存数据D
   4. （运行程序的）通用寄存器信息R
   5. （OS控制程序执行的）程序状态字信息PSW
* 进程的三状态模型
  运行态
  就绪态
  等待态

* 进程挂起
  为解决资源不足造成的性能低，死锁，剥夺某些进程的内存及其他资源，就是进程挂起

* 进程控制块
  PCB是OS用于记录和刻画进程状态及环境信息的数据结构
  全面管理进程的物理实体，刻画进程的执行现状
* 了解进程控制块的内容
** 标识信息
   存放唯一标识该进程的信息
** 现场信息
   存放处理器现场信息
** 控制信息
   存放与管理调度进程相关的信息

* 理解进程的内存映像
  某一时刻进程的内容及其执行状态集合

* 理解进程上下文的概念
  进程需要环境的支持包括CPU现场和cache中的执行信息
  用户级上下文，寄存器上下文，系统级上下文

* 进程管理的程序概念级组成
** 概念级OS进程管理软件
   系统调用/中断/异常处理
   队列管理模块
   进程控制程序
   进程调度程序
   进程通信程序
   终端登录与作业控制程序，性能监控程序，审计程序等外围程序

* 进程队列模型队列管理模块
  就绪队列，等待队列（若干）
** 队列管理模块 
   实现操作系统实现进程管理的核心模块
   操作系统建立多个进程队列，包括就绪队列和等待队列
   按需组织先进先出队列和优先队列
   队列中进程通过PCB的队列指引元采用单双指引远或索引连接
** 进程控制与管理
   - 进程创建：
   进程表加一项，申请PCB并初始化，生成标识，建立映像，分配资源，移入就绪队列
   - 进程撤销：
   从队列中移除，归还资源，撤销标识，回收PCB，移除进程表项
   - 进程阻塞：
     保持现场信息，修改PCB，移入等待队列，调度其他进程执行
   - 进程唤醒：
     等待队列中移出，修改PCB，移入就绪队列
   - 进程挂起：
     修改状态并出入相关队列，收回内存等资源送至对换区
   - 进程激活：
     分配内存，修改状态并出入相关队列
   - 其他：
     修改进程特权
** 原语与进程控制原语
   进程控制过程涉及对OS核心数据结构的修改
   为防止与时间有关的错误，应使用原语
   原语是由若干条指令构成的完成某种特定功能的程序，执行上具有不可分割性
   原语的执行可以通过关中断实现
   进程控制使用的原语称为进程控制原语
   另一类常用原语是进程通信原语

* 进程切换与模式切换 
** 进程切换
   保持中断进程的上下文
   转向进程调度
   恢复待运行进程的上下文
** 模式切换
*** 正向切换
    处理器转为内核模式
    不保存当前进程PC/PSW值到核心栈
    转向中断异常系统调用处理程序
*** 逆向切换
    从待运行进程核心栈弹出PSW/PC值
    处理器转为用户模式
** 进程切换工作过程
* 单线程结构进程 
  传统进程是单线程结构
  并发问题：
  进程切换开销大
  进程通信开销大
  限制了进程并发的粒度
  限制了并行计算的效率
* 多线程环境下进程与线程概念
  进程是操作系统进行资源保护和调度的独立单位
  用来容纳进程映的虚拟地址空间
  对进程、文件和设备的存取保护机制
  线程是进程的一条执行路径，是调度的基本单位
  同一个进程下的所有线程共享进程获得的主存空间和资源

* 多线程环境下线程的状态与调度

* 多线程并发程序设计的优势与应用
